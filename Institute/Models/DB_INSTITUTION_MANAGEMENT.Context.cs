//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Institute.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_INSTITUTION_MANAGEMENTEntities : DbContext
    {
        public DB_INSTITUTION_MANAGEMENTEntities()
            : base("name=DB_INSTITUTION_MANAGEMENTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BatchMaster> BatchMasters { get; set; }
        public virtual DbSet<BatchMaterialDetail> BatchMaterialDetails { get; set; }
        public virtual DbSet<BatchTask> BatchTasks { get; set; }
        public virtual DbSet<BatchTaskTran> BatchTaskTrans { get; set; }
        public virtual DbSet<CategoryMaster> CategoryMasters { get; set; }
        public virtual DbSet<CourseMaster> CourseMasters { get; set; }
        public virtual DbSet<CourseTask> CourseTasks { get; set; }
        public virtual DbSet<CourseTaskTran> CourseTaskTrans { get; set; }
        public virtual DbSet<GeneralNotification> GeneralNotifications { get; set; }
        public virtual DbSet<InstitutionMaster> InstitutionMasters { get; set; }
        public virtual DbSet<TeachersBatchDetail> TeachersBatchDetails { get; set; }
        public virtual DbSet<TeachersMaster> TeachersMasters { get; set; }
        public virtual DbSet<TeachersNotification> TeachersNotifications { get; set; }
        public virtual DbSet<TeachersNotificationToStudent> TeachersNotificationToStudents { get; set; }
        public virtual DbSet<TeachersTaskTran> TeachersTaskTrans { get; set; }
        public virtual DbSet<TeachersTaskTransToStudent> TeachersTaskTransToStudents { get; set; }
        public virtual DbSet<UploadFile> UploadFiles { get; set; }
        public virtual DbSet<UserBatchDetail> UserBatchDetails { get; set; }
        public virtual DbSet<UserDatail> UserDatails { get; set; }
        public virtual DbSet<UserLog> UserLogs { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
    
        public virtual ObjectResult<BatchMaster_CURD_Result> BatchMaster_CURD(Nullable<float> batchid, string batchName, Nullable<float> courseId, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<decimal> batchFee, Nullable<decimal> batchDisc, Nullable<System.TimeSpan> startTime, Nullable<System.TimeSpan> endTime, string batchClass, string remarks, string stmtType, ObjectParameter msg)
        {
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(float));
    
            var batchNameParameter = batchName != null ?
                new ObjectParameter("batchName", batchName) :
                new ObjectParameter("batchName", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(float));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var batchFeeParameter = batchFee.HasValue ?
                new ObjectParameter("batchFee", batchFee) :
                new ObjectParameter("batchFee", typeof(decimal));
    
            var batchDiscParameter = batchDisc.HasValue ?
                new ObjectParameter("batchDisc", batchDisc) :
                new ObjectParameter("batchDisc", typeof(decimal));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.TimeSpan));
    
            var batchClassParameter = batchClass != null ?
                new ObjectParameter("batchClass", batchClass) :
                new ObjectParameter("batchClass", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchMaster_CURD_Result>("BatchMaster_CURD", batchidParameter, batchNameParameter, courseIdParameter, startdateParameter, enddateParameter, batchFeeParameter, batchDiscParameter, startTimeParameter, endTimeParameter, batchClassParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual int BatchMaster_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchMaster_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<BatchMaster_SELECT_Result> BatchMaster_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchMaster_SELECT_Result>("BatchMaster_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<BatchMaterialDetail_CURD_Result> BatchMaterialDetail_CURD(Nullable<float> batchMaterialid, Nullable<float> batchid, Nullable<float> courseId, string materialName, string materialdescription, Nullable<int> qty, Nullable<int> unit, string remarks, byte[] image, string stmtType, ObjectParameter msg)
        {
            var batchMaterialidParameter = batchMaterialid.HasValue ?
                new ObjectParameter("batchMaterialid", batchMaterialid) :
                new ObjectParameter("batchMaterialid", typeof(float));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(float));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(float));
    
            var materialNameParameter = materialName != null ?
                new ObjectParameter("materialName", materialName) :
                new ObjectParameter("materialName", typeof(string));
    
            var materialdescriptionParameter = materialdescription != null ?
                new ObjectParameter("materialdescription", materialdescription) :
                new ObjectParameter("materialdescription", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var unitParameter = unit.HasValue ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(byte[]));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchMaterialDetail_CURD_Result>("BatchMaterialDetail_CURD", batchMaterialidParameter, batchidParameter, courseIdParameter, materialNameParameter, materialdescriptionParameter, qtyParameter, unitParameter, remarksParameter, imageParameter, stmtTypeParameter, msg);
        }
    
        public virtual int BatchMaterialDetail_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchMaterialDetail_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<BatchMaterialDetail_SELECT_Result> BatchMaterialDetail_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchMaterialDetail_SELECT_Result>("BatchMaterialDetail_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<BatchTask_CURD_Result> BatchTask_CURD(Nullable<float> batchtaskid, string taskname, string taskdescription, Nullable<System.DateTime> taskdate, Nullable<System.DateTime> tasttime, Nullable<float> courseid, Nullable<int> sendstatus, Nullable<int> sendcount, Nullable<int> totalcount, string remarks, string stmtType, ObjectParameter msg)
        {
            var batchtaskidParameter = batchtaskid.HasValue ?
                new ObjectParameter("batchtaskid", batchtaskid) :
                new ObjectParameter("batchtaskid", typeof(float));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var taskdescriptionParameter = taskdescription != null ?
                new ObjectParameter("taskdescription", taskdescription) :
                new ObjectParameter("taskdescription", typeof(string));
    
            var taskdateParameter = taskdate.HasValue ?
                new ObjectParameter("taskdate", taskdate) :
                new ObjectParameter("taskdate", typeof(System.DateTime));
    
            var tasttimeParameter = tasttime.HasValue ?
                new ObjectParameter("tasttime", tasttime) :
                new ObjectParameter("tasttime", typeof(System.DateTime));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(float));
    
            var sendstatusParameter = sendstatus.HasValue ?
                new ObjectParameter("sendstatus", sendstatus) :
                new ObjectParameter("sendstatus", typeof(int));
    
            var sendcountParameter = sendcount.HasValue ?
                new ObjectParameter("sendcount", sendcount) :
                new ObjectParameter("sendcount", typeof(int));
    
            var totalcountParameter = totalcount.HasValue ?
                new ObjectParameter("totalcount", totalcount) :
                new ObjectParameter("totalcount", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchTask_CURD_Result>("BatchTask_CURD", batchtaskidParameter, tasknameParameter, taskdescriptionParameter, taskdateParameter, tasttimeParameter, courseidParameter, sendstatusParameter, sendcountParameter, totalcountParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<BatchTask_SELECT_Result> BatchTask_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchTask_SELECT_Result>("BatchTask_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<CategoryMaster_CURD_Result> CategoryMaster_CURD(Nullable<float> categoryid, string categorycode, string categoryname, string stmtType, ObjectParameter msg)
        {
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(float));
    
            var categorycodeParameter = categorycode != null ?
                new ObjectParameter("categorycode", categorycode) :
                new ObjectParameter("categorycode", typeof(string));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoryMaster_CURD_Result>("CategoryMaster_CURD", categoryidParameter, categorycodeParameter, categorynameParameter, stmtTypeParameter, msg);
        }
    
        public virtual int CategoryMaster_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoryMaster_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<CategoryMaster_SELECT_Result> CategoryMaster_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoryMaster_SELECT_Result>("CategoryMaster_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<CourseMaster_CURD_Result> CourseMaster_CURD(Nullable<float> courseid, string coursecode, string coursename, string courseperiod, Nullable<System.DateTime> coursestartdate, Nullable<System.DateTime> courseenddate, Nullable<System.DateTime> curseadvtdate, string courseadvtperiod, Nullable<float> institutionid, Nullable<System.TimeSpan> coursehours, string remarks, string stmtType, ObjectParameter msg)
        {
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(float));
    
            var coursecodeParameter = coursecode != null ?
                new ObjectParameter("coursecode", coursecode) :
                new ObjectParameter("coursecode", typeof(string));
    
            var coursenameParameter = coursename != null ?
                new ObjectParameter("coursename", coursename) :
                new ObjectParameter("coursename", typeof(string));
    
            var courseperiodParameter = courseperiod != null ?
                new ObjectParameter("courseperiod", courseperiod) :
                new ObjectParameter("courseperiod", typeof(string));
    
            var coursestartdateParameter = coursestartdate.HasValue ?
                new ObjectParameter("coursestartdate", coursestartdate) :
                new ObjectParameter("coursestartdate", typeof(System.DateTime));
    
            var courseenddateParameter = courseenddate.HasValue ?
                new ObjectParameter("courseenddate", courseenddate) :
                new ObjectParameter("courseenddate", typeof(System.DateTime));
    
            var curseadvtdateParameter = curseadvtdate.HasValue ?
                new ObjectParameter("curseadvtdate", curseadvtdate) :
                new ObjectParameter("curseadvtdate", typeof(System.DateTime));
    
            var courseadvtperiodParameter = courseadvtperiod != null ?
                new ObjectParameter("courseadvtperiod", courseadvtperiod) :
                new ObjectParameter("courseadvtperiod", typeof(string));
    
            var institutionidParameter = institutionid.HasValue ?
                new ObjectParameter("institutionid", institutionid) :
                new ObjectParameter("institutionid", typeof(float));
    
            var coursehoursParameter = coursehours.HasValue ?
                new ObjectParameter("coursehours", coursehours) :
                new ObjectParameter("coursehours", typeof(System.TimeSpan));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseMaster_CURD_Result>("CourseMaster_CURD", courseidParameter, coursecodeParameter, coursenameParameter, courseperiodParameter, coursestartdateParameter, courseenddateParameter, curseadvtdateParameter, courseadvtperiodParameter, institutionidParameter, coursehoursParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual int CourseMaster_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CourseMaster_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<CourseMaster_SELECT_Result> CourseMaster_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseMaster_SELECT_Result>("CourseMaster_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<CourseTasks_CURD_Result> CourseTasks_CURD(Nullable<float> coursetaskid, string taskname, string taskdescription, Nullable<System.DateTime> taskdate, Nullable<System.TimeSpan> tasktime, Nullable<float> courseid, Nullable<int> sendstatus, Nullable<int> sendcount, string remarks, string stmtType, ObjectParameter msg)
        {
            var coursetaskidParameter = coursetaskid.HasValue ?
                new ObjectParameter("coursetaskid", coursetaskid) :
                new ObjectParameter("coursetaskid", typeof(float));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var taskdescriptionParameter = taskdescription != null ?
                new ObjectParameter("taskdescription", taskdescription) :
                new ObjectParameter("taskdescription", typeof(string));
    
            var taskdateParameter = taskdate.HasValue ?
                new ObjectParameter("taskdate", taskdate) :
                new ObjectParameter("taskdate", typeof(System.DateTime));
    
            var tasktimeParameter = tasktime.HasValue ?
                new ObjectParameter("tasktime", tasktime) :
                new ObjectParameter("tasktime", typeof(System.TimeSpan));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(float));
    
            var sendstatusParameter = sendstatus.HasValue ?
                new ObjectParameter("sendstatus", sendstatus) :
                new ObjectParameter("sendstatus", typeof(int));
    
            var sendcountParameter = sendcount.HasValue ?
                new ObjectParameter("sendcount", sendcount) :
                new ObjectParameter("sendcount", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseTasks_CURD_Result>("CourseTasks_CURD", coursetaskidParameter, tasknameParameter, taskdescriptionParameter, taskdateParameter, tasktimeParameter, courseidParameter, sendstatusParameter, sendcountParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual int CourseTasks_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CourseTasks_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<CourseTasks_SELECT_Result> CourseTasks_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseTasks_SELECT_Result>("CourseTasks_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<GeneralNotification_CURD_Result> GeneralNotification_CURD(Nullable<float> gennotificationid, Nullable<System.DateTime> gennotificationdate, string gennotificationname, string gennotificationfile, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> status, Nullable<float> institutionid, string stmtType, ObjectParameter msg)
        {
            var gennotificationidParameter = gennotificationid.HasValue ?
                new ObjectParameter("gennotificationid", gennotificationid) :
                new ObjectParameter("gennotificationid", typeof(float));
    
            var gennotificationdateParameter = gennotificationdate.HasValue ?
                new ObjectParameter("gennotificationdate", gennotificationdate) :
                new ObjectParameter("gennotificationdate", typeof(System.DateTime));
    
            var gennotificationnameParameter = gennotificationname != null ?
                new ObjectParameter("gennotificationname", gennotificationname) :
                new ObjectParameter("gennotificationname", typeof(string));
    
            var gennotificationfileParameter = gennotificationfile != null ?
                new ObjectParameter("gennotificationfile", gennotificationfile) :
                new ObjectParameter("gennotificationfile", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var institutionidParameter = institutionid.HasValue ?
                new ObjectParameter("institutionid", institutionid) :
                new ObjectParameter("institutionid", typeof(float));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralNotification_CURD_Result>("GeneralNotification_CURD", gennotificationidParameter, gennotificationdateParameter, gennotificationnameParameter, gennotificationfileParameter, startdateParameter, enddateParameter, statusParameter, institutionidParameter, stmtTypeParameter, msg);
        }
    
        public virtual int GeneralNotification_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneralNotification_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<GeneralNotification_SELECT_Result> GeneralNotification_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralNotification_SELECT_Result>("GeneralNotification_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual int InstitutionMaster_CURD(string institutionname, string phone, string email, string website, string area, string address1, string address2, string address3, string building, Nullable<int> room, string trn, string logo, string shortName, string stmtType, ObjectParameter msg)
        {
            var institutionnameParameter = institutionname != null ?
                new ObjectParameter("institutionname", institutionname) :
                new ObjectParameter("institutionname", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var buildingParameter = building != null ?
                new ObjectParameter("building", building) :
                new ObjectParameter("building", typeof(string));
    
            var roomParameter = room.HasValue ?
                new ObjectParameter("room", room) :
                new ObjectParameter("room", typeof(int));
    
            var trnParameter = trn != null ?
                new ObjectParameter("trn", trn) :
                new ObjectParameter("trn", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InstitutionMaster_CURD", institutionnameParameter, phoneParameter, emailParameter, websiteParameter, areaParameter, address1Parameter, address2Parameter, address3Parameter, buildingParameter, roomParameter, trnParameter, logoParameter, shortNameParameter, stmtTypeParameter, msg);
        }
    
        public virtual int InstitutionMaster_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InstitutionMaster_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<InstitutionMaster_SELECT_Result> InstitutionMaster_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InstitutionMaster_SELECT_Result>("InstitutionMaster_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<TeachersBatchDetail_CURD_Result> TeachersBatchDetail_CURD(Nullable<float> teachersbatchid, Nullable<float> courseid, Nullable<float> batchid, Nullable<float> userid, Nullable<float> categoryid, Nullable<decimal> salary, Nullable<decimal> rateperhr, Nullable<decimal> otprate, string stmtType, ObjectParameter msg)
        {
            var teachersbatchidParameter = teachersbatchid.HasValue ?
                new ObjectParameter("teachersbatchid", teachersbatchid) :
                new ObjectParameter("teachersbatchid", typeof(float));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(float));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(float));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(float));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(float));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var rateperhrParameter = rateperhr.HasValue ?
                new ObjectParameter("rateperhr", rateperhr) :
                new ObjectParameter("rateperhr", typeof(decimal));
    
            var otprateParameter = otprate.HasValue ?
                new ObjectParameter("otprate", otprate) :
                new ObjectParameter("otprate", typeof(decimal));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersBatchDetail_CURD_Result>("TeachersBatchDetail_CURD", teachersbatchidParameter, courseidParameter, batchidParameter, useridParameter, categoryidParameter, salaryParameter, rateperhrParameter, otprateParameter, stmtTypeParameter, msg);
        }
    
        public virtual int TeachersBatchDetail_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TeachersBatchDetail_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<TeachersBatchDetail_SELECT_Result> TeachersBatchDetail_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersBatchDetail_SELECT_Result>("TeachersBatchDetail_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<TeachersMaster_CURD_Result> TeachersMaster_CURD(Nullable<float> teachersid, string name, string mobile, string interno, string email, string emiratesid, string area, string address1, string address2, string address3, string building, Nullable<int> roomno, Nullable<int> status, string stmtType, ObjectParameter msg)
        {
            var teachersidParameter = teachersid.HasValue ?
                new ObjectParameter("teachersid", teachersid) :
                new ObjectParameter("teachersid", typeof(float));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var internoParameter = interno != null ?
                new ObjectParameter("interno", interno) :
                new ObjectParameter("interno", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var emiratesidParameter = emiratesid != null ?
                new ObjectParameter("emiratesid", emiratesid) :
                new ObjectParameter("emiratesid", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("address3", address3) :
                new ObjectParameter("address3", typeof(string));
    
            var buildingParameter = building != null ?
                new ObjectParameter("building", building) :
                new ObjectParameter("building", typeof(string));
    
            var roomnoParameter = roomno.HasValue ?
                new ObjectParameter("roomno", roomno) :
                new ObjectParameter("roomno", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersMaster_CURD_Result>("TeachersMaster_CURD", teachersidParameter, nameParameter, mobileParameter, internoParameter, emailParameter, emiratesidParameter, areaParameter, address1Parameter, address2Parameter, address3Parameter, buildingParameter, roomnoParameter, statusParameter, stmtTypeParameter, msg);
        }
    
        public virtual int TeachersMaster_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TeachersMaster_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<TeachersMaster_SELECT_Result> TeachersMaster_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersMaster_SELECT_Result>("TeachersMaster_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<TeachersNotification_CURD_Result> TeachersNotification_CURD(Nullable<float> teachertaskid, string taskname, string taskdescription, Nullable<System.DateTime> taskdate, Nullable<System.TimeSpan> tasktime, Nullable<float> batchid, Nullable<int> sendstatus, Nullable<int> sentcount, string remarks, string stmtType, ObjectParameter msg)
        {
            var teachertaskidParameter = teachertaskid.HasValue ?
                new ObjectParameter("teachertaskid", teachertaskid) :
                new ObjectParameter("teachertaskid", typeof(float));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var taskdescriptionParameter = taskdescription != null ?
                new ObjectParameter("taskdescription", taskdescription) :
                new ObjectParameter("taskdescription", typeof(string));
    
            var taskdateParameter = taskdate.HasValue ?
                new ObjectParameter("taskdate", taskdate) :
                new ObjectParameter("taskdate", typeof(System.DateTime));
    
            var tasktimeParameter = tasktime.HasValue ?
                new ObjectParameter("tasktime", tasktime) :
                new ObjectParameter("tasktime", typeof(System.TimeSpan));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(float));
    
            var sendstatusParameter = sendstatus.HasValue ?
                new ObjectParameter("sendstatus", sendstatus) :
                new ObjectParameter("sendstatus", typeof(int));
    
            var sentcountParameter = sentcount.HasValue ?
                new ObjectParameter("sentcount", sentcount) :
                new ObjectParameter("sentcount", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersNotification_CURD_Result>("TeachersNotification_CURD", teachertaskidParameter, tasknameParameter, taskdescriptionParameter, taskdateParameter, tasktimeParameter, batchidParameter, sendstatusParameter, sentcountParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual int TeachersNotification_Search(string searchTerm, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter recordCount)
        {
            var searchTermParameter = searchTerm != null ?
                new ObjectParameter("SearchTerm", searchTerm) :
                new ObjectParameter("SearchTerm", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TeachersNotification_Search", searchTermParameter, pageIndexParameter, pageSizeParameter, recordCount);
        }
    
        public virtual ObjectResult<TeachersNotification_SELECT_Result> TeachersNotification_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersNotification_SELECT_Result>("TeachersNotification_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<TeachersNotificationToStudent_CURD_Result> TeachersNotificationToStudent_CURD(Nullable<float> teachertaskid, string taskname, string taskdescription, Nullable<System.DateTime> taskdate, Nullable<System.TimeSpan> tasktime, Nullable<float> batchid, Nullable<int> sendstatus, Nullable<int> sentcount, string remarks, string stmtType, ObjectParameter msg)
        {
            var teachertaskidParameter = teachertaskid.HasValue ?
                new ObjectParameter("teachertaskid", teachertaskid) :
                new ObjectParameter("teachertaskid", typeof(float));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var taskdescriptionParameter = taskdescription != null ?
                new ObjectParameter("taskdescription", taskdescription) :
                new ObjectParameter("taskdescription", typeof(string));
    
            var taskdateParameter = taskdate.HasValue ?
                new ObjectParameter("taskdate", taskdate) :
                new ObjectParameter("taskdate", typeof(System.DateTime));
    
            var tasktimeParameter = tasktime.HasValue ?
                new ObjectParameter("tasktime", tasktime) :
                new ObjectParameter("tasktime", typeof(System.TimeSpan));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(float));
    
            var sendstatusParameter = sendstatus.HasValue ?
                new ObjectParameter("sendstatus", sendstatus) :
                new ObjectParameter("sendstatus", typeof(int));
    
            var sentcountParameter = sentcount.HasValue ?
                new ObjectParameter("sentcount", sentcount) :
                new ObjectParameter("sentcount", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersNotificationToStudent_CURD_Result>("TeachersNotificationToStudent_CURD", teachertaskidParameter, tasknameParameter, taskdescriptionParameter, taskdateParameter, tasktimeParameter, batchidParameter, sendstatusParameter, sentcountParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<TeachersNotificationToStudent_SELECT_Result> TeachersNotificationToStudent_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersNotificationToStudent_SELECT_Result>("TeachersNotificationToStudent_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<TeachersTaskTrans_CURD_Result> TeachersTaskTrans_CURD(Nullable<float> teachertranid, Nullable<float> batchtaskid, string inorout, Nullable<float> userid, string taskname, string taskdescription, Nullable<System.DateTime> taskdate, Nullable<System.TimeSpan> tasktime, Nullable<float> slno, string stmtType, ObjectParameter msg)
        {
            var teachertranidParameter = teachertranid.HasValue ?
                new ObjectParameter("teachertranid", teachertranid) :
                new ObjectParameter("teachertranid", typeof(float));
    
            var batchtaskidParameter = batchtaskid.HasValue ?
                new ObjectParameter("batchtaskid", batchtaskid) :
                new ObjectParameter("batchtaskid", typeof(float));
    
            var inoroutParameter = inorout != null ?
                new ObjectParameter("inorout", inorout) :
                new ObjectParameter("inorout", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(float));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var taskdescriptionParameter = taskdescription != null ?
                new ObjectParameter("taskdescription", taskdescription) :
                new ObjectParameter("taskdescription", typeof(string));
    
            var taskdateParameter = taskdate.HasValue ?
                new ObjectParameter("taskdate", taskdate) :
                new ObjectParameter("taskdate", typeof(System.DateTime));
    
            var tasktimeParameter = tasktime.HasValue ?
                new ObjectParameter("tasktime", tasktime) :
                new ObjectParameter("tasktime", typeof(System.TimeSpan));
    
            var slnoParameter = slno.HasValue ?
                new ObjectParameter("slno", slno) :
                new ObjectParameter("slno", typeof(float));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TeachersTaskTrans_CURD_Result>("TeachersTaskTrans_CURD", teachertranidParameter, batchtaskidParameter, inoroutParameter, useridParameter, tasknameParameter, taskdescriptionParameter, taskdateParameter, tasktimeParameter, slnoParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<UploadFiles_CURD_Result> UploadFiles_CURD(Nullable<float> uploadid, string uploadname, Nullable<System.DateTime> uploaddate, string viewgroup, string uploadfile, Nullable<float> institutionid, string remarks, string stmtType, ObjectParameter msg)
        {
            var uploadidParameter = uploadid.HasValue ?
                new ObjectParameter("uploadid", uploadid) :
                new ObjectParameter("uploadid", typeof(float));
    
            var uploadnameParameter = uploadname != null ?
                new ObjectParameter("uploadname", uploadname) :
                new ObjectParameter("uploadname", typeof(string));
    
            var uploaddateParameter = uploaddate.HasValue ?
                new ObjectParameter("uploaddate", uploaddate) :
                new ObjectParameter("uploaddate", typeof(System.DateTime));
    
            var viewgroupParameter = viewgroup != null ?
                new ObjectParameter("viewgroup", viewgroup) :
                new ObjectParameter("viewgroup", typeof(string));
    
            var uploadfileParameter = uploadfile != null ?
                new ObjectParameter("uploadfile", uploadfile) :
                new ObjectParameter("uploadfile", typeof(string));
    
            var institutionidParameter = institutionid.HasValue ?
                new ObjectParameter("institutionid", institutionid) :
                new ObjectParameter("institutionid", typeof(float));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadFiles_CURD_Result>("UploadFiles_CURD", uploadidParameter, uploadnameParameter, uploaddateParameter, viewgroupParameter, uploadfileParameter, institutionidParameter, remarksParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<UploadFiles_SELECT_Result> UploadFiles_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadFiles_SELECT_Result>("UploadFiles_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<USER_LOGIN_STAPP_Result> USER_LOGIN_STAPP(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USER_LOGIN_STAPP_Result>("USER_LOGIN_STAPP", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<UserBatchDetail_CURD_Result> UserBatchDetail_CURD(Nullable<float> userbatchdetid, Nullable<float> courseid, Nullable<float> batchid, Nullable<float> userid, Nullable<float> categoryid, Nullable<decimal> fees, Nullable<decimal> disc, Nullable<decimal> totalamount, string stmtType, ObjectParameter msg)
        {
            var userbatchdetidParameter = userbatchdetid.HasValue ?
                new ObjectParameter("userbatchdetid", userbatchdetid) :
                new ObjectParameter("userbatchdetid", typeof(float));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(float));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(float));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(float));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(float));
    
            var feesParameter = fees.HasValue ?
                new ObjectParameter("fees", fees) :
                new ObjectParameter("fees", typeof(decimal));
    
            var discParameter = disc.HasValue ?
                new ObjectParameter("disc", disc) :
                new ObjectParameter("disc", typeof(decimal));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserBatchDetail_CURD_Result>("UserBatchDetail_CURD", userbatchdetidParameter, courseidParameter, batchidParameter, useridParameter, categoryidParameter, feesParameter, discParameter, totalamountParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<UserBatchDetail_SELECT_Result> UserBatchDetail_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserBatchDetail_SELECT_Result>("UserBatchDetail_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<UserDatail_CURD_Result> UserDatail_CURD(Nullable<float> userdetailid, Nullable<float> categoryid, string categorycode, Nullable<float> userid, Nullable<int> adminstatus, Nullable<float> parentid, Nullable<int> status, string stmtType, ObjectParameter msg)
        {
            var userdetailidParameter = userdetailid.HasValue ?
                new ObjectParameter("userdetailid", userdetailid) :
                new ObjectParameter("userdetailid", typeof(float));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(float));
    
            var categorycodeParameter = categorycode != null ?
                new ObjectParameter("categorycode", categorycode) :
                new ObjectParameter("categorycode", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(float));
    
            var adminstatusParameter = adminstatus.HasValue ?
                new ObjectParameter("adminstatus", adminstatus) :
                new ObjectParameter("adminstatus", typeof(int));
    
            var parentidParameter = parentid.HasValue ?
                new ObjectParameter("parentid", parentid) :
                new ObjectParameter("parentid", typeof(float));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDatail_CURD_Result>("UserDatail_CURD", userdetailidParameter, categoryidParameter, categorycodeParameter, useridParameter, adminstatusParameter, parentidParameter, statusParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<UserDatail_SELECT_Result> UserDatail_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDatail_SELECT_Result>("UserDatail_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<UserLog_CURD_Result> UserLog_CURD(Nullable<float> logid, string transcode, string transname, Nullable<System.DateTime> transdate, string tranaction, Nullable<float> transuserid, string stmtType, ObjectParameter msg)
        {
            var logidParameter = logid.HasValue ?
                new ObjectParameter("logid", logid) :
                new ObjectParameter("logid", typeof(float));
    
            var transcodeParameter = transcode != null ?
                new ObjectParameter("transcode", transcode) :
                new ObjectParameter("transcode", typeof(string));
    
            var transnameParameter = transname != null ?
                new ObjectParameter("transname", transname) :
                new ObjectParameter("transname", typeof(string));
    
            var transdateParameter = transdate.HasValue ?
                new ObjectParameter("transdate", transdate) :
                new ObjectParameter("transdate", typeof(System.DateTime));
    
            var tranactionParameter = tranaction != null ?
                new ObjectParameter("tranaction", tranaction) :
                new ObjectParameter("tranaction", typeof(string));
    
            var transuseridParameter = transuserid.HasValue ?
                new ObjectParameter("transuserid", transuserid) :
                new ObjectParameter("transuserid", typeof(float));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLog_CURD_Result>("UserLog_CURD", logidParameter, transcodeParameter, transnameParameter, transdateParameter, tranactionParameter, transuseridParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<UserLog_SELECT_Result> UserLog_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLog_SELECT_Result>("UserLog_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual int UserMaster_CURD(string username, string mobile, string email, string password, Nullable<float> categoryid, Nullable<int> adminstatus, Nullable<int> active, string userid1, Nullable<float> institutionid, Nullable<int> otp, Nullable<int> oTPverify, string firstName, string lastName, string stmtType, ObjectParameter msg)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(float));
    
            var adminstatusParameter = adminstatus.HasValue ?
                new ObjectParameter("adminstatus", adminstatus) :
                new ObjectParameter("adminstatus", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            var userid1Parameter = userid1 != null ?
                new ObjectParameter("userid1", userid1) :
                new ObjectParameter("userid1", typeof(string));
    
            var institutionidParameter = institutionid.HasValue ?
                new ObjectParameter("institutionid", institutionid) :
                new ObjectParameter("institutionid", typeof(float));
    
            var otpParameter = otp.HasValue ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(int));
    
            var oTPverifyParameter = oTPverify.HasValue ?
                new ObjectParameter("OTPverify", oTPverify) :
                new ObjectParameter("OTPverify", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaster_CURD", usernameParameter, mobileParameter, emailParameter, passwordParameter, categoryidParameter, adminstatusParameter, activeParameter, userid1Parameter, institutionidParameter, otpParameter, oTPverifyParameter, firstNameParameter, lastNameParameter, stmtTypeParameter, msg);
        }
    
        public virtual ObjectResult<UserMaster_CURD_INSTITUTE_Result> UserMaster_CURD_INSTITUTE(Nullable<float> userid, string username, string mobile, string email, string password, Nullable<float> categoryid, Nullable<int> adminstatus, Nullable<int> active, string userid1, Nullable<float> institutionid, Nullable<int> otp, Nullable<int> oTPverify, string firstName, string lastName, string stmtType, ObjectParameter msg)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(float));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(float));
    
            var adminstatusParameter = adminstatus.HasValue ?
                new ObjectParameter("adminstatus", adminstatus) :
                new ObjectParameter("adminstatus", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            var userid1Parameter = userid1 != null ?
                new ObjectParameter("userid1", userid1) :
                new ObjectParameter("userid1", typeof(string));
    
            var institutionidParameter = institutionid.HasValue ?
                new ObjectParameter("institutionid", institutionid) :
                new ObjectParameter("institutionid", typeof(float));
    
            var otpParameter = otp.HasValue ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(int));
    
            var oTPverifyParameter = oTPverify.HasValue ?
                new ObjectParameter("OTPverify", oTPverify) :
                new ObjectParameter("OTPverify", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var stmtTypeParameter = stmtType != null ?
                new ObjectParameter("StmtType", stmtType) :
                new ObjectParameter("StmtType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserMaster_CURD_INSTITUTE_Result>("UserMaster_CURD_INSTITUTE", useridParameter, usernameParameter, mobileParameter, emailParameter, passwordParameter, categoryidParameter, adminstatusParameter, activeParameter, userid1Parameter, institutionidParameter, otpParameter, oTPverifyParameter, firstNameParameter, lastNameParameter, stmtTypeParameter, msg);
        }
    
        public virtual int UserMaster_OTP_UPDATE(Nullable<int> otp, string email, ObjectParameter msg)
        {
            var otpParameter = otp.HasValue ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaster_OTP_UPDATE", otpParameter, emailParameter, msg);
        }
    
        public virtual int UserMaster_OTP_VERIFY(Nullable<int> oTP, string userName, ObjectParameter rowNumber)
        {
            var oTPParameter = oTP.HasValue ?
                new ObjectParameter("OTP", oTP) :
                new ObjectParameter("OTP", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaster_OTP_VERIFY", oTPParameter, userNameParameter, rowNumber);
        }
    
        public virtual ObjectResult<UserMaster_SELECT_Result> UserMaster_SELECT(Nullable<int> startIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserMaster_SELECT_Result>("UserMaster_SELECT", startIndexParameter, pageSizeParameter, totalCount);
        }
    }
}
